(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{78:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return o})),t.d(r,"metadata",(function(){return g})),t.d(r,"toc",(function(){return a})),t.d(r,"default",(function(){return b}));t(109),t(111);var i=t(3),l=t(7),n=t(0),c=t(97),s=t(144),o={title:"Scroll Trigger",sidebar_label:"Scroll Trigger",slug:"/scroll-triggers"},g={unversionedId:"scripts/ScrollTrigger",id:"scripts/ScrollTrigger",isDocsHomePage:!1,title:"Scroll Trigger",description:"Preview",source:"@site/docs\\scripts\\ScrollTrigger.md",slug:"/scroll-triggers",permalink:"/docs/scroll-triggers",editUrl:"https://github.com/rempei-okada/doppio/tree/master/docs/docs/docs/scripts/ScrollTrigger.md",version:"current",sidebar_label:"Scroll Trigger",sidebar:"documents",previous:{title:"Utility",permalink:"/docs/util"}},a=[{value:"Usage",id:"usage",children:[]},{value:"ScrollOption",id:"scrolloption",children:[]},{value:"TriggerOption",id:"triggeroption",children:[]},{value:"Preview",id:"preview",children:[]}],p={toc:a};function b(e){var r=e.components,t=Object(l.a)(e,["components"]);return Object(c.b)("wrapper",Object(i.a)({},p,t,{components:r,mdxType:"MDXLayout"}),Object(c.b)("a",{href:"#preview"},"Preview"),Object(c.b)("p",null,"Scroll trrigger realizes detect overlap element from current scroll position and element position, and add css classes for animation, transition or other styles."),Object(c.b)("h3",{id:"usage"},"Usage"),Object(c.b)("p",null,"Import fot HTML project"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),"var ScrollTrigger = Doppio.ScrollTrigger;\n")),Object(c.b)("p",null,"Import for ES6 project"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),'import { ScrollTrigger } from "doppio";\n')),Object(c.b)("p",null,"Import for CommonJS project"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),'const { ScrollTrigger } = require("doppio");\n')),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),'// Create instance\nconst triggerHandler = new ScrollTrigger({});\n// elements to register as scroll trigger\nconst elements = document.querySelectorAll(".scroll-trigger");\n\ntriggerHandler.add(elements, {\n    once: false,\n    offset: {\n        // viewport trigger position offset\n        viewport: {\n            x: (trigger: Trigger, rect: ClientRect, direction: Direction) => 0,\n            y: trigger => trigger.visible ? 0 : 0.2\n        },\n        // element trriger position offset\n        element: {\n            x: () => 0,\n            y: () => 0.2\n        }\n    },\n    toggle: {\n        class: {\n            // overlap element will be added classes.\n            in: ["visible-css-class"],\n            // unoverlap element will be added classes.\n            out: ["invisible-css-class"]\n        },\n        callback: {\n            // delay switch classes\n            in: () => delay(500),\n            out: () => delay(500)\n        }\n    },\n});\n')),Object(c.b)("h3",{id:"scrolloption"},"ScrollOption"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"{\n  sustain: 300,\n  element: window,\n  callback: (position: { x: number; y: number; }, direction: Direction) => void,\n  start: () => { },\n  stop: () => { },\n  directionChange: (direction: Direction) => void\n}\n")),Object(c.b)("h3",{id:"triggeroption"},"TriggerOption"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),'{\n  // Whether when overlapped elements and switch visible classes when first time only\n  once: false,\n  offset: {\n    // viewport trigger position offset\n    viewport: {\n        x: (trigger: Trigger, rect: ClientRect, direction: Direction) => 0,\n        y: (trigger: Trigger, rect: ClientRect, direction: Direction) => 0,\n    },\n    // element trriger position offset\n    element: {\n        x: (trigger: Trigger, rect: ClientRect, direction: Direction) => 0,\n        y: (trigger: Trigger, rect: ClientRect, direction: Direction) => 0,\n    }\n  },\n  toggle: {\n    class: {\n        // default is ["visible"]\n        in: string[],\n        // default is ["invisible"]\n        out: string[]\n    },\n    callback: {\n        in: () => { },\n        out: () => { },\n    }\n  }\n}\n')),Object(c.b)("hr",null),Object(c.b)("a",{id:"preview"}),Object(c.b)("h2",{id:"preview"},"Preview"),Object(c.b)("p",null,"When scrolling and overlapping, the class specified ",Object(c.b)("inlineCode",{parentName:"p"},"( toggle.class.in ): string[]")," will be given after 500 msec."),Object(c.b)("div",null,Object(c.b)(s.a,{mdxType:"BrowserOnly"},(Object(n.useEffect)((function(){}),[]),Object(c.b)("div",null,Object(c.b)("div",{className:"row flex-column",style:{height:"1480px"}},Object(c.b)("div",{className:"scroll-trigger pa-3",style:{height:"80px"}},"Trigger"),Object(c.b)("div",{className:"scroll-trigger pa-3",style:{height:"80px"}},"Trigger"),Object(c.b)("div",{className:"scroll-trigger pa-3",style:{height:"80px"}},"Trigger"),Object(c.b)("div",{className:"scroll-trigger pa-3",style:{height:"80px"}},"Trigger"),Object(c.b)("div",{className:"scroll-trigger pa-3",style:{height:"80px"}},"Trigger"),Object(c.b)("div",{className:"scroll-trigger pa-3",style:{height:"80px"}},"Trigger"),Object(c.b)("div",{className:"scroll-trigger pa-3",style:{height:"80px"}},"Trigger"),Object(c.b)("div",{className:"scroll-trigger pa-3",style:{height:"80px"}},"Trigger"),Object(c.b)("div",{className:"scroll-trigger pa-3",style:{height:"80px"}},"Trigger"),Object(c.b)("div",{className:"scroll-trigger pa-3",style:{height:"80px"}},"Trigger"),Object(c.b)("div",{className:"scroll-trigger pa-3",style:{height:"80px"}},"Trigger"),Object(c.b)("div",{className:"scroll-trigger pa-3",style:{height:"80px"}},"Trigger"),Object(c.b)("div",{className:"scroll-trigger pa-3",style:{height:"80px"}},"Trigger"),Object(c.b)("div",{className:"scroll-trigger pa-3",style:{height:"80px"}},"Trigger")))))))}b.isMDXComponent=!0}}]);